/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as PreferencesRouteImport } from './routes/preferences'
import { Route as LoginRouteImport } from './routes/login'
import { Route as HomeRouteImport } from './routes/home'
import { Route as ForgetPasswordRouteImport } from './routes/forget-password'
import { Route as ExploreRouteImport } from './routes/explore'
import { Route as IndexRouteImport } from './routes/index'
import { Route as GroupIndexRouteImport } from './routes/group/index'
import { Route as GroupJoinRouteImport } from './routes/group/join'
import { Route as GroupCreateRouteImport } from './routes/group/create'
import { Route as GroupEditIdRouteImport } from './routes/group/edit/$id'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const PreferencesRoute = PreferencesRouteImport.update({
  id: '/preferences',
  path: '/preferences',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeRoute = HomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRouteImport,
} as any)
const ForgetPasswordRoute = ForgetPasswordRouteImport.update({
  id: '/forget-password',
  path: '/forget-password',
  getParentRoute: () => rootRouteImport,
} as any)
const ExploreRoute = ExploreRouteImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const GroupIndexRoute = GroupIndexRouteImport.update({
  id: '/group/',
  path: '/group/',
  getParentRoute: () => rootRouteImport,
} as any)
const GroupJoinRoute = GroupJoinRouteImport.update({
  id: '/group/join',
  path: '/group/join',
  getParentRoute: () => rootRouteImport,
} as any)
const GroupCreateRoute = GroupCreateRouteImport.update({
  id: '/group/create',
  path: '/group/create',
  getParentRoute: () => rootRouteImport,
} as any)
const GroupEditIdRoute = GroupEditIdRouteImport.update({
  id: '/group/edit/$id',
  path: '/group/edit/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/explore': typeof ExploreRoute
  '/forget-password': typeof ForgetPasswordRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/preferences': typeof PreferencesRoute
  '/profile': typeof ProfileRoute
  '/signup': typeof SignupRoute
  '/group/create': typeof GroupCreateRoute
  '/group/join': typeof GroupJoinRoute
  '/group': typeof GroupIndexRoute
  '/group/edit/$id': typeof GroupEditIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/explore': typeof ExploreRoute
  '/forget-password': typeof ForgetPasswordRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/preferences': typeof PreferencesRoute
  '/profile': typeof ProfileRoute
  '/signup': typeof SignupRoute
  '/group/create': typeof GroupCreateRoute
  '/group/join': typeof GroupJoinRoute
  '/group': typeof GroupIndexRoute
  '/group/edit/$id': typeof GroupEditIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/explore': typeof ExploreRoute
  '/forget-password': typeof ForgetPasswordRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/preferences': typeof PreferencesRoute
  '/profile': typeof ProfileRoute
  '/signup': typeof SignupRoute
  '/group/create': typeof GroupCreateRoute
  '/group/join': typeof GroupJoinRoute
  '/group/': typeof GroupIndexRoute
  '/group/edit/$id': typeof GroupEditIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/explore'
    | '/forget-password'
    | '/home'
    | '/login'
    | '/preferences'
    | '/profile'
    | '/signup'
    | '/group/create'
    | '/group/join'
    | '/group'
    | '/group/edit/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/explore'
    | '/forget-password'
    | '/home'
    | '/login'
    | '/preferences'
    | '/profile'
    | '/signup'
    | '/group/create'
    | '/group/join'
    | '/group'
    | '/group/edit/$id'
  id:
    | '__root__'
    | '/'
    | '/explore'
    | '/forget-password'
    | '/home'
    | '/login'
    | '/preferences'
    | '/profile'
    | '/signup'
    | '/group/create'
    | '/group/join'
    | '/group/'
    | '/group/edit/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ExploreRoute: typeof ExploreRoute
  ForgetPasswordRoute: typeof ForgetPasswordRoute
  HomeRoute: typeof HomeRoute
  LoginRoute: typeof LoginRoute
  PreferencesRoute: typeof PreferencesRoute
  ProfileRoute: typeof ProfileRoute
  SignupRoute: typeof SignupRoute
  GroupCreateRoute: typeof GroupCreateRoute
  GroupJoinRoute: typeof GroupJoinRoute
  GroupIndexRoute: typeof GroupIndexRoute
  GroupEditIdRoute: typeof GroupEditIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/preferences': {
      id: '/preferences'
      path: '/preferences'
      fullPath: '/preferences'
      preLoaderRoute: typeof PreferencesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forget-password': {
      id: '/forget-password'
      path: '/forget-password'
      fullPath: '/forget-password'
      preLoaderRoute: typeof ForgetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/explore': {
      id: '/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof ExploreRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/group/': {
      id: '/group/'
      path: '/group'
      fullPath: '/group'
      preLoaderRoute: typeof GroupIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/group/join': {
      id: '/group/join'
      path: '/group/join'
      fullPath: '/group/join'
      preLoaderRoute: typeof GroupJoinRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/group/create': {
      id: '/group/create'
      path: '/group/create'
      fullPath: '/group/create'
      preLoaderRoute: typeof GroupCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/group/edit/$id': {
      id: '/group/edit/$id'
      path: '/group/edit/$id'
      fullPath: '/group/edit/$id'
      preLoaderRoute: typeof GroupEditIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ExploreRoute: ExploreRoute,
  ForgetPasswordRoute: ForgetPasswordRoute,
  HomeRoute: HomeRoute,
  LoginRoute: LoginRoute,
  PreferencesRoute: PreferencesRoute,
  ProfileRoute: ProfileRoute,
  SignupRoute: SignupRoute,
  GroupCreateRoute: GroupCreateRoute,
  GroupJoinRoute: GroupJoinRoute,
  GroupIndexRoute: GroupIndexRoute,
  GroupEditIdRoute: GroupEditIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
